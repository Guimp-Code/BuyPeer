openapi: 3.1.0
info:
  title: BUYPEER API
  description: API da plataforma de e-commerce BUYPEER by Treppix Tech House
  version: 1.0.0
  contact:
    name: Treppix Tech House
    email: contato@treppix.com

servers:
  - url: https://api.buypeer.com/api
    description: Servidor de Produção
  - url: http://localhost:8000/api
    description: Servidor de Desenvolvimento

security:
  - bearerAuth: []

paths:
  /products:
    get:
      tags:
        - Products
      summary: Lista produtos
      description: Retorna lista paginada de produtos
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
        - name: search
          in: query
          schema:
            type: string
      responses:
        200:
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  
  /products/{id}:
    get:
      tags:
        - Products
      summary: Busca produto por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Produto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Produto não encontrado

  /cart:
    get:
      tags:
        - Cart
      summary: Lista itens do carrinho
      security:
        - bearerAuth: []
      responses:
        200:
          description: Itens do carrinho
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItem'
                  
    post:
      tags:
        - Cart
      summary: Adiciona item ao carrinho
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                quantity:
                  type: integer
                  minimum: 1
                variation_id:
                  type: integer
                  nullable: true
      responses:
        201:
          description: Item adicionado com sucesso
        400:
          description: Dados inválidos
        401:
          description: Não autorizado

  /orders:
    get:
      tags:
        - Orders
      summary: Lista pedidos do usuário
      security:
        - bearerAuth: []
      responses:
        200:
          description: Lista de pedidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
                  
    post:
      tags:
        - Orders
      summary: Cria novo pedido
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        201:
          description: Pedido criado com sucesso
        400:
          description: Dados inválidos

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login do usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        200:
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        401:
          description: Credenciais inválidas

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        sku:
          type: string
        description:
          type: string
        price:
          type: number
          format: decimal
        stock_quantity:
          type: integer
        status:
          type: string
          enum: [active, inactive]
        is_featured:
          type: boolean
        category:
          $ref: '#/components/schemas/Category'
        brand:
          $ref: '#/components/schemas/Brand'

    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        slug:
          type: string

    Brand:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        slug:
          type: string

    CartItem:
      type: object
      properties:
        id:
          type: integer
        product_id:
          type: integer
        quantity:
          type: integer
        variation_id:
          type: integer
          nullable: true
        product:
          $ref: '#/components/schemas/Product'

    Order:
      type: object
      properties:
        id:
          type: integer
        order_number:
          type: string
        total:
          type: number
          format: decimal
        status:
          type: string
        payment_status:
          type: string
        created_at:
          type: string
          format: date-time
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'

    OrderItem:
      type: object
      properties:
        id:
          type: integer
        product_id:
          type: integer
        quantity:
          type: integer
        price:
          type: number
          format: decimal
        product:
          $ref: '#/components/schemas/Product'

    CreateOrderRequest:
      type: object
      properties:
        payment_method:
          type: string
        shipping_address:
          $ref: '#/components/schemas/Address'
        billing_address:
          $ref: '#/components/schemas/Address'

    Address:
      type: object
      properties:
        full_name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        country:
          type: string

    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string 